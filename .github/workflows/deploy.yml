name: Terraform CI/CD

on:
    push:
        branches:
            - main

jobs:
    terraform:
        name: Deploy terraform infra to AWS
        
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Set up AWS creds
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: eu-west-3

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: "1.1.7"

            - name: Select environment
              run: |
                if [[ $GITHUB_REF_NAME == "dev" ]]; then
                    BACKEND_FILE=backend-dev.hcl
                elif [[ $GITHUB_REF_NAME = "staging" ]]; then
                    BACKEND_FILE=backend-staging.hcl
                else
                    BACKEND_FILE=backend-prod.hcl
                fi
                echo "Using backend $BACKEND_FILE"
                echo "BACKEND_FILE=$BACKEND_FILE" >> $GITHUB_ENV

            - name: Terraform init
              run: terraform -chdir=infra init -backend-config=$BACKEND_FILE

            - name: Terraform plan
              run: terraform -chdir=infra plan

            - name: Terraform apply
              run: terraform -chdir=infra apply -auto-approve

            - name: Save Terraform output as Ansible inventory
              run: |
                BASTION=$(terraform -chdir=infra output -raw bastion_ip)
                NODES=$(terraform -chdir=infra output -json instance_ips | jq -r '.[]')
                echo "[bastion]" > ../config/inventory.ini
                echo "$BASTION" >> ../config/inventory.ini
                echo "" >> ../config/inventory.ini
                echo "[nodes]" >> ../config/inventory.ini
                for node in $NODES; do
                    echo "$node" >> ../config/inventory.ini
                done
                echo "" >> ../config/inventory.ini
                echo "[nodes:vars]" >> ../config/inventory.ini
                echo "ansible_user=ec2-user" >> ../config/inventory.ini
                echo "ansible_ssh_private_key_file=../infra/modules/ec2/keys/id_rsa" >> ../config/inventory.ini
                echo "ansible_ssh_common_args='-o ProxyCommand=\"ssh -W %h:%p -q ec2-user@$BASTION -i ../infra/modules/ec2/keys/id_rsa\"'" >> ../config/inventory.ini

            - name: Upload inventory artifact
              uses: actions/upload-artifact@v4
              with:
                name: inventory
                path: config/inventory.ini


    build-frontend:
        name: Build Vue front and upload artifact
        
        needs: terraform
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            
            - name: Install Node
              uses: actions/setup-node@v3
              with:
                node-version: '20'

            - name: Install dependencies
              run: |
                cd app
                npm ci

            - name: Build
              run: |
                cd app
                npm run build

            - name: Upload built artifact
              uses: actions/upload-artifact@v4
              with:
                name: frontend-build
                path: app/dist

    # ansible:
    #     name: Run playbook to deploy app on servers
    #     needs: build-frontend
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v3
            
    #         - name: Download built artifact
    #           uses: actions/download-artifact@v4
    #           with:
    #             name: frontend-build
    #             path: dist/
                
    #         - name: Download inventory artifact
    #           uses: actions/download-artifact@v4
    #           with:
    #             name: inventory
    #             path: config/inventory.ini

    #         - name: Run Ansible Playbook
    #           uses: ansible/ansible-runner-action@v2
    #           with:
    #             inventory: config/inventory.ini
    #             playbook: ansible/deploy-frontend.yml